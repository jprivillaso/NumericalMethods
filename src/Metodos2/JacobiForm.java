    // Variables declaration - do not modify
    
    // End of variables declaration/*
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JacobiForm.java
 *
 * Created on 17/10/2011, 07:07:43 PM
 */
package Metodos2;

import Vistas.Mensage;

/**
 *
 * @author Juan Rivillas
 */
public class JacobiForm extends javax.swing.JFrame {

    /** Creates new form JacobiForm */
    public JacobiForm(double [][]a,int p) {
        n=p;
        A=a;
        initComponents(); 
        Object [][]matriz=new Object[4][n+2];
         String[] nomColum=new String[n+2];
        nomColum[0]="Iteraciones";
        nomColum[n+1]="error";
        for(int i=1; i<n+1 ; i++){
            nomColum[i]="x"+i;
        }
       // String[] nomColum = {"Iteraciones", "x1", "x2", "x3", "error"};
        jTable2.setModel(new javax.swing.table.DefaultTableModel(matriz, nomColum));
        Object [][]matriz2=new Object[n][2];
        jTable1.setModel(new javax.swing.table.DefaultTableModel(matriz2, new String []{"X" , "f(x)"}));
        
    }
    
    private double[] x1;
    private double[][] A ;
    private double[] b;
    private int n ;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "X0", "b"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jScrollPane1.setBounds(20, 130, 120, 140);
        jLayeredPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Iteraciones", "X1", "X2", "X3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jScrollPane2.setBounds(170, 130, 270, 140);
        jLayeredPane1.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 255, 255));
        jLabel2.setText("Iteraciones");
        jLabel2.setBounds(180, 320, 120, 25);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("Tolerancia");
        jLabel3.setBounds(180, 360, 110, 25);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(20, 290, 57, 23);
        jLayeredPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.setBounds(320, 280, 70, 20);
        jLayeredPane1.add(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextField2.setBounds(320, 320, 70, 20);
        jLayeredPane1.add(jTextField2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jCheckBox1.setFont(new java.awt.Font("Lindsey", 1, 18));
        jCheckBox1.setForeground(new java.awt.Color(204, 255, 255));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Relax");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jCheckBox1.setBounds(170, 280, 140, 33);
        jLayeredPane1.add(jCheckBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton4.setText("Help");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.setBounds(20, 390, 53, 23);
        jLayeredPane1.add(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextField3.setBounds(320, 360, 70, 20);
        jLayeredPane1.add(jTextField3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("Return To Method's List");
        jButton2.setBounds(170, 400, 160, 23);
        jLayeredPane1.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setText("EXIT");
        jButton3.setBounds(20, 340, 55, 23);
        jLayeredPane1.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 48));
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("JACOBI");
        jLabel1.setBounds(110, 20, 210, 90);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo7.jpg"))); // NOI18N
        jLabel4.setBounds(0, 0, 450, 450);
        jLayeredPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double[] x0 = new double[n];
        b = new double[n];
        //for para capturar valores de X0 
        for (int i = 0; i < n; i++) {
             String a = (jTable1.getValueAt(i,0).toString());
             x0[i] = Double.parseDouble(a);                        
        }
        
        //for para capturar valores de b
        for (int i = 0; i < n; i++) {
            String x = jTable1.getValueAt(i, 1).toString();
            b[i] = Double.parseDouble(x);
            System.out.println("este es b" +b[i]);
        }
        
        double tolerancia = Double.parseDouble(jTextField3.getText().toString());
        int iteraciones = Integer.parseInt(jTextField2.getText());
        MacroAlgoritmo(tolerancia, x0, iteraciones);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    }//GEN-LAST:event_jCheckBox1ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
         String titulo = "Jacobbi Method";
    String texto = "The method begins with values assigned to each variable.Tolerance and maximum  \n"
+"number of iterations defined stopping criteria for success or failure, as defined. The array \n"
+"must be organized in such a way that is strictly diagonally dominant, to bemore accurate  \n"
+"and work with a stable matrix. \n";


    Mensage a = new Mensage(titulo, texto);
    a.setVisible(true);
}//GEN-LAST:event_jButton4ActionPerformed

    public void MacroAlgoritmo(double tolerancia, double x0[], int iteraciones) {
        System.out.println(iteraciones + "y " + tolerancia);

        int cont = 0;
        double Error = tolerancia + 1;
        //matriz de objetos para llenar la tabla
        Object[][] matriz = new Object[iteraciones][n + 3];
        while (Error > tolerancia && cont < iteraciones) {
            x1 = CalcularNuevoJacobi(x0);
            double[] vectorResta = new double[x1.length];
            for (int i = 0; i < x1.length; i++) {
                vectorResta[i] = Math.abs(x1[i] - x0[i]);
            }
            Error = Norma1(vectorResta);
            //ImprimirEnTabla(x1);
            for (int i = 1; i < n+1; i++) {
                matriz[cont][0] = cont;
                matriz[cont ][i] = x0[i - 1];
                matriz[cont][n+1] = Error;
            }
            x0 = x1;
            ImprimirVector(x0);
            cont++;
        }
        String [] vm = new String[n+2];
        vm[0] = "iteraciones";
        vm[n+1] = "error";
        for (int i = 1; i < n+1; i++) {
            vm [i] = "x" + i;
        }
        
        jTable2.setModel(new javax.swing.table.DefaultTableModel(matriz, vm));
        
        if (Error < tolerancia) {
            System.out.println("x1 Es una aproximacion con una tolerancia = " + tolerancia);
        } else {
            System.out.println("Fracaso en " + iteraciones + " iteraciones");
        }
    }

    public double[] CalcularNuevoJacobi(double x0[]) {
        x1 = new double[x0.length];
        double rela = 1;
        if (jCheckBox1.isSelected()){
            rela = Double.parseDouble(jTextField1.getText());
        }
        
        for (int i = 0; i < n; i++) {
            double suma = 0;
            for (int j = 0; j < n; j++) {
                if (j != i) {
                    suma = suma + A[i][j] * x0[j];
                }
                x1[i] = ((b[i] - suma) / A[i][i]);
            }
        }
        ImprimirVector(x1);
        return x1;
    }

    private double[] ImprimirVector(double[] vector) {

        for (int i = 0; i < vector.length; i++) {
            System.out.println(vector[i]);
        }
        System.out.println("------------");
        return vector;

    }

    private double Norma1(double[] vectorResta) {
        double maximo = vectorResta[0];
        for (int i = 0; i < vectorResta.length; i++) {
            if (maximo < vectorResta[i]) {
                maximo = vectorResta[i];
            }
        }
        return maximo;
    }

    private void ImprimirEnTabla(double[] x1) {
        Object[][] matriz = new Object[5][5];
        for (int i = 0; i < x1.length; i++) {
            for (int j = 1; j < 4; j++) {
                matriz[i][j] = x1[j - 1];
            }
        }
        String[] nomColum=new String[n+2];
        nomColum[0]="Iteraciones";
        nomColum[n+1]="error";
        for(int i=1; i<n+1 ; i++){
            nomColum[i]="x"+i;
        }
       // String[] nomColum = {"Iteraciones", "x1", "x2", "x3", "error"};
        jTable2.setModel(new javax.swing.table.DefaultTableModel(matriz, nomColum));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                double[][] a = {
                    {6, 48, -2, 5, -8, -50},
                    {75, -6, 4, -8, 1, 21},
                    
                    {3, -7, 125, -4, 7, 38},
                    {5, -6, 7, 95, -11, 79},
                    {3, 8, -19, -12, 131, 728}
                };
                JacobiForm b=new JacobiForm(a,5);
                b.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
